{"version":3,"file":"single-spa.js","sources":["../../src/applications/app.helpers.js","../../src/start.js","../../src/lifeCycle/load.js","../../src/lifeCycle/unmount.js","../../src/lifeCycle/mount.js","../../src/lifeCycle/bootstrap.js","../../src/navigations/reroute.js","../../src/applications/app.js"],"sourcesContent":["// 描述 应用的状态\n\n// 刚刚初始化\nexport const NOT_LOADED = 'NOT_LOADED'\n\n// 加载资源\nexport const LOADING_SOURCE_CODE = 'LOADING_SOURCE_CODE'\n\n// 还没有 调用 bootstrap\nexport const NOT_BOOTSTRAP = 'NOT_BOOTSTRAP'\n\n// 启动中\nexport const BOOTSTRAPING = 'BOOTSTRAPING'\n\n// 没有挂载\nexport const NOT_MOUNTED = 'NOT_MOUNTED'\n\n\n// 挂载中\nexport const MOUNTING = 'MOUNTING'\n\n// 挂载完成\nexport const MOUNTED = 'MOUNTED'\n\n// 跟新中\nexport const UPPDATING = 'UPPDATING'\n\n// 卸载中  接触挂载\nexport const UNMOUNTING = 'UNMOUNTING'\n\n// 完全卸载中\nexport const UNLOADING = 'UNLOADING'\n\n// 文件加载失败\nexport const LOAD_ERR = 'LOAD_ERR'\n\n// 代码异常\nexport const SKIP_BECAUSE_BROKEN = 'SKIP_BECAUSE_BROKEN'\n\n\n// 当前应用是否被激活  ->  挂载完成 算激活完成\nexport function isActive(app){\n    return app.status === MOUNTED\n}\n\n// 当前应用是否要被激活\n// 如果返回 true， 开启初始化 一系列操作\nexport function shouldBeActive(app){\n    // 根据 路径是否匹配，确定是否要激活\n    return app.activeWhen(window.location)\n}","import { reroute } from './navigations/reroute'\n\nexport let started = false;\n\n// 挂载应用\nexport function start(){\n    started = true;\n    reroute() // 除了加载应用还需要去挂载应用\n}","import { LOADING_SOURCE_CODE, NOT_BOOTSTRAP } from '../applications/app.helpers'\n\nexport const flatFnArray = (fns) =>{\n    fns = Array.isArray(fns) ? fns : [fns]\n    return function(props){\n        return fns.reduce((result, itemFn) => {\n            return result.then(() => itemFn(props))\n        }, Promise.resolve())\n    }\n}\n\n// 加载完成\nexport async function toLoadPromise(app){\n    if (app.loadPromise) {\n        return app.loadPromise\n    }\n    \n    app.status = LOADING_SOURCE_CODE;\n\n    // 加载完成\n    let { bootstrap,mount,unmount } = await app.loadApp(app.customProps)\n\n    app.status = NOT_BOOTSTRAP;\n\n    // 因为 bootstrap 可能是一个数组，需要 compose 一下\n    app.bootstrap = flatFnArray(bootstrap);\n    app.mount = flatFnArray(mount);\n    app.unmount = flatFnArray(unmount);\n\n    return app;\n}","import { MOUNTED, UNMOUNTING, NOT_MOUNTED } from \"../applications/app.helpers\";\n\n// 卸载 app 操作\nexport async function toUnmountPromise(app){\n    // 如果当前 应用没有挂载，不需要做任何事情\n    if (app.status !== MOUNTED) {\n        return app\n    }\n\n    app.status = UNMOUNTING\n    await app.unmount(app.customProps)\n    app.status = NOT_MOUNTED\n    return app;\n}   ","import { NOT_MOUNTED, MOUNTED, MOUNTING } from \"../applications/app.helpers\";\n\nexport const toMountPromise = async (app) => {\n    if (app.status !== NOT_MOUNTED) {\n        return app;\n    }\n\n    app.status = MOUNTING\n    await app.mount(app.customProps)\n    app.status = MOUNTED\n    return app\n}\n","import { NOT_BOOTSTRAP, BOOTSTRAPING, NOT_MOUNTED } from \"../applications/app.helpers\";\n\nexport const toBootstrapPromise = async (app) => {\n    if (app.status !== NOT_BOOTSTRAP) {\n        return app;\n    }\n\n    app.status = BOOTSTRAPING\n    await app.bootstrap(app.customProps)\n    app.status = NOT_MOUNTED\n    return app\n}","import { getAppChanges } from '../applications/app'\nimport { started } from '../start'\nimport { toLoadPromise } from '../lifeCycle/load'\nimport { toUnmountPromise } from '../lifeCycle/unmount'\n\nimport { toMountPromise } from '../lifeCycle/mount'\nimport { toBootstrapPromise } from '../lifeCycle/bootstrap'\n\nexport const reroute = () => {\n    // 需要获取加载应用\n    // 需要获取要被挂载的应用\n    // 哪些应用需要被卸载\n    const { appsToUnmount,appsToLoad,appsToMount } = getAppChanges();\n\n\n    if (started) {\n        console.log('第二次run  调用 start 方法  装载app')\n        return performAppChanges()\n    } else {\n        console.log('第一次run  调用 registerApplication 方法')\n        // 注册应用， 需要预先加载\n        return loadApps()\n    }\n\n    async function performAppChanges(){\n        // 先卸载不需要的应用\n       let unmountPromises = appsToUnmount.map(toUnmountPromise)\n\n        // 将需要加载的应用拿到 卸载以前的应用-> 加载 -> 启动 -> 挂载\n        appsToLoad.map(async(app) => {\n            app = await toLoadPromise(app)\n            app = await toBootstrapPromise(app)\n            return toMountPromise(app)\n        })\n\n       // 部分情况 已经 加载 完成 ， 直接挂载\n       // 把要挂载的， 直接挂载\n        appsToMount.map(async(app) => {\n            app = await toBootstrapPromise(app)\n            return toMountPromise(app) \n       })\n    }\n\n    async function loadApps(){\n        // 预加载\n        let apps = await Promise.all(appsToLoad.map(toLoadPromise))\n        console.log(apps)\n    }\n}","\nimport { NOT_LOADED, SKIP_BECAUSE_BROKEN, shouldBeActive, LOADING_SOURCE_CODE, NOT_BOOTSTRAP, NOT_MOUNTED, MOUNTED } from './app.helpers';\nimport { reroute } from '../navigations/reroute';\nconst apps = []\n\n// 维护状态  状态机\nexport function registerApplication(appName, loadApp, activeWhen, customProps){\n    apps.push({\n        name: appName,\n        loadApp, \n        activeWhen,  // 是否要被激活 根据路由匹配\n        customProps,\n\n        // 注册应用，默认没有挂载\n        status: NOT_LOADED,\n    })\n\n    reroute()\n}\n\n// 不同的状态  状态机\nexport const getAppChanges = () => {\n    const appsToUnmount = []; // 需要被卸载的 app\n    const appsToLoad = []; // 需要加载的 app\n    const appsToMount = [] // 需要挂载的 app\n\n    // 切换 路由的时候  一个需要被卸载，一个需要被加载\n    apps.forEach((app) => {\n        // 应用状态不是报错的   // 根据 路径是否匹配，确定是否要激活\n        const appShouldActive = app.status !== SKIP_BECAUSE_BROKEN && shouldBeActive(app)\n\n        switch (app.status) {\n            case NOT_LOADED: //刚刚初始化\n            case LOADING_SOURCE_CODE: // 加载资源\n                if (appShouldActive) {\n                    appsToLoad.push(app) // 推入 appsToLoad(需要加载的 app) 数组\n                }\n                break;\n\n            case NOT_BOOTSTRAP:\n            case BOOTSTRAPING:\n            case NOT_MOUNTED:\n                if (appShouldActive) {\n                    appsToMount.push(app)  // 需要挂载的 app\n                }\n                break;\n            case MOUNTED: // 需要被 卸载\n                if (!appShouldActive) {\n                    appsToUnmount.push(app) // 需要被卸载的 app\n                }\n            default:\n                break;\n        }\n    })\n    return {\n        appsToUnmount,\n        appsToLoad,\n        appsToMount\n    }\n}"],"names":["BOOTSTRAPING"],"mappings":";;;;;;IAAA;AACA;IACA;IACO,MAAM,UAAU,GAAG,aAAY;AACtC;IACA;IACO,MAAM,mBAAmB,GAAG,sBAAqB;AACxD;IACA;IACO,MAAM,aAAa,GAAG,gBAAe;AAC5C;IACA;IACO,MAAMA,cAAY,GAAG,eAAc;AAC1C;IACA;IACO,MAAM,WAAW,GAAG,cAAa;AACxC;AACA;IACA;IACO,MAAM,QAAQ,GAAG,WAAU;AAClC;IACA;IACO,MAAM,OAAO,GAAG,UAAS;AAIhC;IACA;IACO,MAAM,UAAU,GAAG,aAAY;AAOtC;IACA;IACO,MAAM,mBAAmB,GAAG,sBAAqB;AAOxD;IACA;IACA;IACO,SAAS,cAAc,CAAC,GAAG,CAAC;IACnC;IACA,IAAI,OAAO,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC;IAC1C;;IChDO,IAAI,OAAO,GAAG,KAAK,CAAC;AAC3B;IACA;IACO,SAAS,KAAK,EAAE;IACvB,IAAI,OAAO,GAAG,IAAI,CAAC;IACnB,IAAI,OAAO,GAAE;IACb;;ICNO,MAAM,WAAW,GAAG,CAAC,GAAG,IAAI;IACnC,IAAI,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,EAAC;IAC1C,IAAI,OAAO,SAAS,KAAK,CAAC;IAC1B,QAAQ,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,MAAM,KAAK;IAC9C,YAAY,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC;IACnD,SAAS,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC;IAC7B,KAAK;IACL,EAAC;AACD;IACA;IACO,eAAe,aAAa,CAAC,GAAG,CAAC;IACxC,IAAI,IAAI,GAAG,CAAC,WAAW,EAAE;IACzB,QAAQ,OAAO,GAAG,CAAC,WAAW;IAC9B,KAAK;IACL;IACA,IAAI,GAAG,CAAC,MAAM,GAAG,mBAAmB,CAAC;AACrC;IACA;IACA,IAAI,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC;AACxE;IACA,IAAI,GAAG,CAAC,MAAM,GAAG,aAAa,CAAC;AAC/B;IACA;IACA,IAAI,GAAG,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;IAC3C,IAAI,GAAG,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;IACnC,IAAI,GAAG,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;AACvC;IACA,IAAI,OAAO,GAAG,CAAC;IACf;;IC5BA;IACO,eAAe,gBAAgB,CAAC,GAAG,CAAC;IAC3C;IACA,IAAI,IAAI,GAAG,CAAC,MAAM,KAAK,OAAO,EAAE;IAChC,QAAQ,OAAO,GAAG;IAClB,KAAK;AACL;IACA,IAAI,GAAG,CAAC,MAAM,GAAG,WAAU;IAC3B,IAAI,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC;IACtC,IAAI,GAAG,CAAC,MAAM,GAAG,YAAW;IAC5B,IAAI,OAAO,GAAG,CAAC;IACf;;ICXO,MAAM,cAAc,GAAG,OAAO,GAAG,KAAK;IAC7C,IAAI,IAAI,GAAG,CAAC,MAAM,KAAK,WAAW,EAAE;IACpC,QAAQ,OAAO,GAAG,CAAC;IACnB,KAAK;AACL;IACA,IAAI,GAAG,CAAC,MAAM,GAAG,SAAQ;IACzB,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,EAAC;IACpC,IAAI,GAAG,CAAC,MAAM,GAAG,QAAO;IACxB,IAAI,OAAO,GAAG;IACd;;ICTO,MAAM,kBAAkB,GAAG,OAAO,GAAG,KAAK;IACjD,IAAI,IAAI,GAAG,CAAC,MAAM,KAAK,aAAa,EAAE;IACtC,QAAQ,OAAO,GAAG,CAAC;IACnB,KAAK;AACL;IACA,IAAI,GAAG,CAAC,MAAM,GAAGA,eAAY;IAC7B,IAAI,MAAM,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,EAAC;IACxC,IAAI,GAAG,CAAC,MAAM,GAAG,YAAW;IAC5B,IAAI,OAAO,GAAG;IACd;;ICHO,MAAM,OAAO,GAAG,MAAM;IAC7B;IACA;IACA;IACA,IAAI,MAAM,EAAE,aAAa,CAAC,UAAU,CAAC,WAAW,EAAE,GAAG,aAAa,EAAE,CAAC;AACrE;AACA;IACA,IAAI,IAAI,OAAO,EAAE;IACjB,QAAQ,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAC;IACjD,QAAQ,OAAO,iBAAiB,EAAE;IAClC,KAAK,MAAM;IACX,QAAQ,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAC;IACxD;IACA,QAAQ,OAAO,QAAQ,EAAE;IACzB,KAAK;AACL;IACA,IAAI,eAAe,iBAAiB,EAAE;IACtC;IACA,OAAO,IAAI,eAAe,GAAG,aAAa,CAAC,GAAG,CAAC,gBAAgB,EAAC;AAChE;IACA;IACA,QAAQ,UAAU,CAAC,GAAG,CAAC,MAAM,GAAG,KAAK;IACrC,YAAY,GAAG,GAAG,MAAM,aAAa,CAAC,GAAG,EAAC;IAC1C,YAAY,GAAG,GAAG,MAAM,kBAAkB,CAAC,GAAG,EAAC;IAC/C,YAAY,OAAO,cAAc,CAAC,GAAG,CAAC;IACtC,SAAS,EAAC;AACV;IACA;IACA;IACA,QAAQ,WAAW,CAAC,GAAG,CAAC,MAAM,GAAG,KAAK;IACtC,YAAY,GAAG,GAAG,MAAM,kBAAkB,CAAC,GAAG,EAAC;IAC/C,YAAY,OAAO,cAAc,CAAC,GAAG,CAAC;IACtC,QAAQ,EAAC;IACT,KAAK;AACL;IACA,IAAI,eAAe,QAAQ,EAAE;IAC7B;IACA,QAAQ,IAAI,IAAI,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,EAAC;IACnE,QAAQ,OAAO,CAAC,GAAG,CAAC,IAAI,EAAC;IACzB,KAAK;IACL;;IC7CA,MAAM,IAAI,GAAG,GAAE;AACf;IACA;IACO,SAAS,mBAAmB,CAAC,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,CAAC;IAC9E,IAAI,IAAI,CAAC,IAAI,CAAC;IACd,QAAQ,IAAI,EAAE,OAAO;IACrB,QAAQ,OAAO;IACf,QAAQ,UAAU;IAClB,QAAQ,WAAW;AACnB;IACA;IACA,QAAQ,MAAM,EAAE,UAAU;IAC1B,KAAK,EAAC;AACN;IACA,IAAI,OAAO,GAAE;IACb,CAAC;AACD;IACA;IACO,MAAM,aAAa,GAAG,MAAM;IACnC,IAAI,MAAM,aAAa,GAAG,EAAE,CAAC;IAC7B,IAAI,MAAM,UAAU,GAAG,EAAE,CAAC;IAC1B,IAAI,MAAM,WAAW,GAAG,GAAE;AAC1B;IACA;IACA,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK;IAC1B;IACA,QAAQ,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,KAAK,mBAAmB,IAAI,cAAc,CAAC,GAAG,EAAC;AACzF;IACA,QAAQ,QAAQ,GAAG,CAAC,MAAM;IAC1B,YAAY,KAAK,UAAU,CAAC;IAC5B,YAAY,KAAK,mBAAmB;IACpC,gBAAgB,IAAI,eAAe,EAAE;IACrC,oBAAoB,UAAU,CAAC,IAAI,CAAC,GAAG,EAAC;IACxC,iBAAiB;IACjB,gBAAgB,MAAM;AACtB;IACA,YAAY,KAAK,aAAa,CAAC;IAC/B,YAAY,KAAK,YAAY,CAAC;IAC9B,YAAY,KAAK,WAAW;IAC5B,gBAAgB,IAAI,eAAe,EAAE;IACrC,oBAAoB,WAAW,CAAC,IAAI,CAAC,GAAG,EAAC;IACzC,iBAAiB;IACjB,gBAAgB,MAAM;IACtB,YAAY,KAAK,OAAO;IACxB,gBAAgB,IAAI,CAAC,eAAe,EAAE;IACtC,oBAAoB,aAAa,CAAC,IAAI,CAAC,GAAG,EAAC;IAC3C,iBAAiB;IAGjB,SAAS;IACT,KAAK,EAAC;IACN,IAAI,OAAO;IACX,QAAQ,aAAa;IACrB,QAAQ,UAAU;IAClB,QAAQ,WAAW;IACnB,KAAK;IACL;;;;;;;;;;;"}