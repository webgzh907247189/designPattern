{
  "version": 3,
  "sources": ["../src/index.ts", "../../shared/src/index.ts", "../src/vnode.ts", "../src/render.ts", "../src/h.ts"],
  "sourcesContent": ["export * from './render'\nexport * from './h'\nexport * from './vnode'", "export const isObject = (value) => {\n    return typeof value === 'object' && value !== null\n}\n\nexport const isString = (value) => {\n    return typeof value === 'string'\n}\n\nexport const isNumber = (value) => {\n    return typeof value === 'number'\n}\n\nexport const isFunction = (value) => {\n    return typeof value === 'function'\n}\n\nexport const isArray = Array.isArray\n\nexport const assign = Object.assign;\n\nexport const enum ShapeFlags {\n    ELEMENT = 1,\n    FUNCTIONAL_COMPONENT = 2,\n    STATEFUL_COMPONENT = 4,\n    TEXT_CHILDREN = 8,\n    ARRAY_CHILDREN = 16,\n    SLOTS_CHILDREN = 32,\n    TELEPORT = 64,\n    SUSPENSE = 128,\n    COMPONENT_SHOULD_KEEP_ALIVE = 256,\n    COMPONENT_KEPT_ALIVE = 512,\n    COMPONENT =  ShapeFlags.STATEFUL_COMPONENT | ShapeFlags.FUNCTIONAL_COMPONENT // 6\n    // | \u4F4D\u8FD0\u7B97\uFF0C \u67091\u4E2A\u662F1 \u5C31\u53EF\u4EE5\u662F 1\n    // 0010 1*2*1 = 2\n    // 0100 1*2*2 = 4\n    // 0110 1*2*2 + 1*2*1 = 6\n\n    // & \u4E0E\u8FD0\u7B97\uFF0C \u4E24\u4E2A\u90FD\u662F1 \u624D\u662F 1\n    // 0010 1*2*1 = 2\n    // 0100 1*2*2 = 4\n    // 0000 0\n}", "import { isArray, isString, ShapeFlags } from \"@vue/shared\"\nexport const TEXT = Symbol('text')\n\n\nexport const isSameVnode = (oldVnode, newVnode) => {\n    return oldVnode.key === newVnode.key && oldVnode.type === newVnode.type\n}\n\n\n// vue2 vue3 vnode \u6709\u4EC0\u4E48\u533A\u522B \uFF0C\u6CA1\u6709 shapeFlag\u7684\u65F6\u5019\u600E\u4E48\u505A\u7684 ???\n\nexport const createVnode = (type, props, children = null) => {\n    debugger\n    // \u7EC4\u5408\u65B9\u6848 shapeFlag\n    let shapeFlag = isString(type) ? ShapeFlags.ELEMENT : 0\n\n    // shapeFlag \u6807\u8BC6 \u81EA\u5DF1 \u548C children \u7684 \u7C7B\u578B(\u591A\u4E2A\u513F\u5B50\u8FD8\u662F\u4E00\u4E2A\u513F\u5B50)\n    // a|b = c \n    // c&b > 0 \u6709 b  \n    // c&b == 0 \u6CA1\u6709b\n    const vnode = {\n        _v_isVnode: true,\n        shapeFlag,\n        type,\n        props,\n        children,\n        key: props?.key,\n        el: null, // \u865A\u62DF\u8282\u70B9\u4E0A\u5BF9\u5E94\u7684 \u771F\u5B9E\u7684\u8282\u70B9 \uFF0C \u670D\u52A1\u4E8E\u540E\u7EED diff \u7B97\u6CD5\n    }\n    // \u7528\u65B0\u7684 props \u66F4\u65B0\u8001\u7684 vnode.props \u4E4B\u540E\uFF0C\u5728\u6279\u91CF\u66F4\u65B0\u5230 vnode.el \u4E0A\u9762\n    // const newVode = {props: 'xx', el: 'xx'}\n    // const oldVode = {props: 'yy', el: 'yy'}\n\n    // a|b = c \n    // c&b > 0 \u6709 b  \n    // c&b == 0 \u6CA1\u6709b\n    if(children){\n        let type = 0\n        if(isArray(children)){\n            type = ShapeFlags.ARRAY_CHILDREN\n        }else{\n            children = String(children)\n            type = ShapeFlags.TEXT_CHILDREN\n        }\n\n        vnode.shapeFlag = vnode.shapeFlag | type\n        // vnode.shapeFlag |= type\n    }\n    return vnode\n}\n\n\nexport const isVnode = (value) => {\n    return !!(value && value._v_isVnode)\n}   ", "import { isString, ShapeFlags } from \"@vue/shared\";\nimport { createVnode, isSameVnode, TEXT } from \"./vnode\";\n\nexport const createRenderer = (renderOptions) => {\n\n    const {\n        insert: hostInsert,\n        // \u5220\u9664\u8282\u70B9\n        remove: hostRemove,\n        // \u6587\u672C\u8282\u70B9\n        // \u5143\u7D20\u8282\u70B9\u52A8\u6001\u53D8\u66F4\n        setElementText: hostSetElementText,\n        setText: hostSetText,\n        querySelector: hostQuerySelector,\n        parentNode: hostParentNode,\n        nextSibiling: hostNextSibiling,\n        createElement: hostCreateElement,\n        createText: hostCreateText,\n        patchProps: hostPatchProps\n    } = renderOptions;\n\n    // \u66FF\u6362\u8001\u7684 vnodelist\n    const normalise = (children, idx) => {\n        if(isString(children[idx])){\n            let vnode = createVnode(TEXT, null, children[idx])\n            children[idx] = vnode\n        }\n        return children[idx]\n    }\n\n    const mountChildren = (children, container) => {\n        for (let index = 0; index < children.length; index++) {\n            // const elementVnode = children[index];\n            let child = normalise(children, index)\n            patch(null, child, container)\n        }\n    }\n\n    // 1. \u521B\u9020\u81EA\u5DF1 \u5143\u7D20\n    // 2. \u6302\u8F7D props\n    // 3. \u521B\u5EFA children (children \u4E24\u79CD\uFF0C1. \u6587\u672C 2.\u6570\u7EC4)\n    // 4. \u628A\u81EA\u5DF1\u6302\u8F7D\u5230 \u7236\u5143\u7D20\n    const mountElement = (vnode, container, anchor) => {\n        console.log(vnode, 'vnode')\n        // debugger\n        // vue2 \u662F tag, vue3 \u662F type\n        let { type, props, children, shapeFlag} = vnode\n\n        // \u628A \u771F\u5B9E\u7684 dom \u8282\u70B9\u6302\u8F7D\u5230\u865A\u62DF\u8282\u70B9\u4E0A\uFF0C \u540E\u7EED\u7528\u4E8E\u590D\u7528\u8282\u70B9\n        let el = vnode.el = hostCreateElement(type)\n\n        if(props){\n            for (const key in props) {\n                hostPatchProps(el, key, null, props[key])\n            }\n        }\n\n        // 17 \u6570\u7EC4children;  9 \u5B57\u7B26\u4E32children\n        //  8 & 17 (16 + 1 -> 8+x) -> 0b01000 & 0b10001 -> 0b 00000  0\n        // 16 & 17 (16 + 1) -> 0b10000 & 0b10001 -> 0b 10000  16\n\n        //  8 & 9 (8 + 1) -> 0b01000 & 0b01001 -> 0b 01000  8\n        // 16 & 9 (8 + 1 -> 9+x) -> 0b10000 & 0b01001 -> 0b 00000  0\n        if(ShapeFlags.TEXT_CHILDREN & shapeFlag){ // \u6587\u672C\n            hostSetElementText(el, children)\n        }else if(ShapeFlags.ARRAY_CHILDREN & shapeFlag){ // \u6570\u7EC4\n            mountChildren(children, el)\n        }\n        // \u5B50\u5143\u7D20\u521B\u5EFA\u5B8C\u6210\uFF0C\u5728\u6302\u8F7D \u7236\u5143\u7D20\n        hostInsert(el, container, anchor)\n    }\n\n    const patchProps = (oldProps, newProps, el) => {\n        for (const key in newProps) {\n            hostPatchProps(el, key, oldProps[key], newProps[key])\n        }\n     \n        for (const key in oldProps) {\n            if(!newProps[key]){\n                hostPatchProps(el, key, oldProps[key], undefined)\n            }\n        }\n    }\n    const unmountChildren = (oldChildren) => {\n        for (let index = 0; index < oldChildren.length; index++) {\n            const elementVnode = oldChildren[index];\n            unmount(elementVnode);\n        }\n    }\n\n    // \u4F7F\u7528\u4E0B\u9762\u8FD9\u79CD\u65B9\u6848\uFF0C\u5C3D\u53EF\u80FD\u51CF\u5C11\u6BD4\u8F83\u7684\u5185\u5BB9\n    // \u5148\u628A\u7279\u6B8A\u60C5\u51B5\u7684\u62C6\u51FA\u6765\uFF0C \u5C3D\u53EF\u80FD\u51CF\u5C11\u6BD4\u8F83\u591A\u5185\u5BB9\n    const patchKeydChildren = (oldChildren, newChildren, el) => {\n        let i = 0\n        let oldChildrenLength = oldChildren.length - 1\n        let newChildrenLength = newChildren.length - 1\n\n        // ['a','b','c'] -> ['a','b','e', 'd'] \n        // 0  1  2\n        // 0  1  2  3  \n        // console.log(i, oldChildrenLength, newChildrenLength) 2 2 3\n        // \u4ECE 2 -> 3 \u533A\u95F4 \u662F\u65B0\u589E\u7684\n        // \u8C01\u5148\u904D\u5386\u7ED3\u675F\uFF0C \u4EE5\u6700\u5148\u7ED3\u675F\u7684\u4E3A\u51C6\n\n        // \u4F7F\u7528\u4E0B\u9762\u8FD9\u79CD\u65B9\u6848\uFF0C\u5C3D\u53EF\u80FD\u51CF\u5C11\u6BD4\u8F83\u591A\u5185\u5BB9\n        while(i <= oldChildrenLength && i <= newChildrenLength){\n            const oldChildrenItem = oldChildren[i]\n            const newChildrenItem = newChildren[i]\n\n            if(isSameVnode(oldChildrenItem, newChildrenItem)){\n                patch(oldChildrenItem, newChildrenItem, el)\n            }else{\n                break\n            }\n            i++\n        }\n        // console.log(i, oldChildrenLength, newChildrenLength)\n\n\n        // ['a','b','c'] -> ['d', 'a', 'b', 'c'] \n        // console.log(i, oldChildrenLength, newChildrenLength) 0  -1  1\n        // \u4ECE 0 -> 1 \u533A\u95F4 \u662F\u65B0\u589E\u7684\n        // \u8C01\u5148\u904D\u5386\u7ED3\u675F\uFF0C \u4EE5\u6700\u5148\u7ED3\u675F\u7684\u4E3A\u51C6\n        while(i <= oldChildrenLength && i <= newChildrenLength){\n            const oldChildrenItem = oldChildren[oldChildrenLength]\n            const newChildrenItem = newChildren[newChildrenLength]\n\n            if(isSameVnode(oldChildrenItem, newChildrenItem)){\n                patch(oldChildrenItem, newChildrenItem, el)\n            }else{\n                break\n            }\n            oldChildrenLength--\n            newChildrenLength--\n        }\n        console.log(i, oldChildrenLength, newChildrenLength)\n\n        // i \u6BD4 oldChildrenLength \u5927   \u8BF4\u660E\u662F\u9700\u8981\u65B0\u589E\u7684\n        // i \u548C newChildrenLength \u4E4B\u95F4 \u4E3A\u65B0\u589E\u7684\u5185\u5BB9\n        // ['a','b','c'] -> ['d', 'a', 'b', 'c'] \n        //   0  1  2\n        //0  1  2  3  \n        // i = 0;  oldChildrenLength = -1;  newChildrenLength = 0;\n        // \u65B0\u589E\u903B\u8F91\n        if(i > oldChildrenLength){\n            if(i <= newChildrenLength){\n                while(i <= newChildrenLength){\n                    const nextPos = newChildrenLength + 1\n                    const anchor = nextPos < newChildren.length ? newChildren[nextPos].el : null;\n                    // \u521B\u5EFA\u65B0\u8282\u70B9\n                    patch(null, newChildren[i], el, anchor)\n                    i++\n                }\n            }\n        }else if(i > newChildrenLength){\n            // ['a','b','c'] -> ['b', 'c'] \n            //0  1  2\n            //0  1   \n            // i = 0;  oldChildrenLength = 0;  newChildrenLength = -1; \n            // i \u6BD4 newChildrenLength  \u5927   \u8BF4\u660E\u662F\u9700\u8981\u5378\u8F7D\u7684\n            // i \u548C oldChildrenLength \u4E4B\u95F4   \u4E3A\u5378\u8F7D\u7684\u5185\u5BB9\n            if(i <= oldChildrenLength){\n                while(i <= oldChildrenLength){\n                    unmount(oldChildren[i])\n                    i++\n                }\n            }\n        }\n       \n        let s1 = i\n        let s2 = i\n        const keyToNewIndexMap = new Map()\n        // a b  c d e    f g\n        // a b  e c d h  f g\n        // 2 4 5 ->  console.log(i, oldChildrenLength, newChildrenLength)\n        for (let index = s2; index <= newChildrenLength; index++) {\n            keyToNewIndexMap.set(newChildren[index].key, index)\n        }\n\n        // {'e' => 2, 'c' => 3, 'd' => 4, 'h' => 5} \n        console.log(keyToNewIndexMap, 'keyToNewIndexMap')\n\n        // \u9700\u8981\u5904\u7406\u7684\u8282\u70B9 \u6570\u7EC4 \u957F\u5EA6\n        const tobePatched = newChildrenLength - s2 + 1\n        const newIndexToOldIndexMap = new Array(tobePatched).fill(0)\n\n        // \u5FAA\u73AF\u8001\u7684\u5143\u7D20 \u770B\u4E00\u4E0B\u65B0\u7684\u91CC\u9762\u6709\u6CA1\u6709 \uFF0C \u6709\u5C31\u6BD4\u8F83\u5DEE\u5F02\uFF0C\u6CA1\u6709\u5C31\u6DFB\u52A0\u5230\u5217\u8868\uFF0C \u8001\u7684\u6709\u65B0\u7684\u6CA1\u6709\u8981\u5220\u9664\n        for (let index = s1; index <= oldChildrenLength; index++) {\n            const oldElement = oldChildren[index];\n            let newIdx = keyToNewIndexMap.get(oldElement.key) // \u7528\u8001\u7684\u5B69\u5B50\u53BB\u65B0\u7684map \u91CC\u9762\u627E\n\n            if(!!newIdx){\n                unmount(oldElement)\n            }else{\n                // newIdx \u662F \u65B0\u5143\u7D20\u7EC4\u6210\u7684 map (key, idx)  \u53D6\u503C(\u53D6 \u8001\u7684 key) \u8FD4\u56DE \u65B0\u5143\u7D20 \u5728\u65B0\u6570\u7EC4\u7684 \u4E0B\u6807\n                // newIdx - s2 \u4ECE 0 \u5F00\u59CB\u7B97 \uFF0C\u548C map \u5BF9\u5E94\u4E0A\n                newIndexToOldIndexMap[newIdx - s2] = index + 1 // +1 \u9632\u6B62 \u4ECE 0\u5F00\u59CB\n             \n                patch(oldElement, newChildren[newIdx], el)\n            }\n        }\n        console.log(newIndexToOldIndexMap) // [5,3,4,0]\n\n        // \u4E0A\u9762\u6BD4\u5BF9\uFF0C\u4E0B\u9762\u79FB\u52A8\u4F4D\u7F6E  \u5148 diff \u5728 remove\n        // \u5012\u53D9\u63D2\u5165\n        for (let index = tobePatched - 1; index >= 0; index--) {\n            const idx = s2 + tobePatched - 1 // i + s2 // ???\n            let current = newChildren[idx] // \u627E\u5230 h\n\n            let anchor = idx + 1 < newChildren.length ? newChildren[idx + 1].el : null // \u627E\u5230\u9700\u8981\u88AB\u63D2\u5165\u7684\u8282\u70B9\u7684 \u5BB9\u5668\u8282\u70B9\n            // current \u6CA1\u6709 el \u5C31\u662F\u65B0\u589E\u7684\u8282\u70B9\n            \n            // \u65B0\u589E\u7684\u5143\u7D20\n            if(newIndexToOldIndexMap[index] === 0){\n                patch(null, current, el, anchor)\n            }else{// \u4E0D\u662F0 \u8BF4\u660E\u662Fpatch \u7684\u5143\u7D20\n\n                // \u6B64\u65F6\u662Fpatch \u9636\u6BB5 current.el  \u80AF\u5B9A\u5B58\u5728\n                hostInsert(current.el, el, anchor)\n            }\n        }\n    }\n\n    const patchChildren = (oldValue, newVnode, el) => {\n        const oldChildren = oldValue && oldValue.children\n        const newChildren = newVnode && newVnode.children\n\n        const prevFlag = oldValue.shapeFlag\n        const shapeFlag = newVnode.shapeFlag\n\n        // 3 * 3 = 9 \u4E00\u51719\u79CD\u60C5\u51B5\n        // \u65B0       \u65E7          \u64CD\u4F5C\n        // \u6587\u672C     \u6570\u7EC4        \u5220\u9664\u8001\u7684 chilren\uFF0C\u8BBE\u7F6E\u6587\u672C\u5185\u5BB9\n        // \u6587\u672C     \u6587\u672C        \u66F4\u65B0\u6587\u672C\u5185\u5BB9\n        // \u6587\u672C     \u7A7A          \u66F4\u65B0\u6587\u672C\u5185\u5BB9\n        // \u6570\u7EC4     \u6570\u7EC4        diff \u7B97\u6CD5\n        // \u6570\u7EC4     \u6587\u672C        \u6E05\u7A7A\u6587\u672C\uFF0C\u8FDB\u884C\u6302\u8F7D\n        // \u6570\u7EC4     \u7A7A          \u8FDB\u884C\u6302\u8F7D\n        // \u7A7A       \u6570\u7EC4        \u5220\u9664\u6240\u6709\u7684 children\n        // \u7A7A       \u6587\u672C        \u6E05\u7A7A\u6587\u672C\n        // \u7A7A       \u7A7A          \u65E0\u9700\u5904\u7406\n\n        // \u6587\u672C + \u6570\u7EC4 -> \u5220\u9664\u8001\u7684vnode \u6240\u6709\u7684 \u5B50\u8282\u70B9\n        // \u6587\u672C + \u6587\u672C\n        // \u6587\u672C + \u7A7A\n        if(shapeFlag & ShapeFlags.TEXT_CHILDREN){\n            // \u8001\u7684\u662F\u6570\u7EC4\n            if(prevFlag & ShapeFlags.ARRAY_CHILDREN){\n                unmountChildren(oldChildren) // \u5220\u9664\u6240\u6709\u7684\u5B50\u8282\u70B9\n            }\n\n            // \u5148\u5220\u9664\uFF0C\u5728\u7ED9\u4E4B\u524D\u7684\u8282\u70B9\u7684 \u7236\u8282\u70B9\u4E0A\u9762\u6302\u8F7D newChildren \n            if(oldChildren !== newChildren){\n                hostSetElementText(el, newChildren)\n            }\n        }else{\n            // \u8FDB\u5165\u5230\u4E86 else\uFF0C \u8BF4\u660E\u73B0\u5728 \u4E3A \u7A7A \u6216\u8005 \u6570\u7EC4\u7684\u60C5\u51B5\n\n            // \u4E4B\u524D\u4E3A\u6570\u7EC4\n            // \u6570\u7EC4 + \u6570\u7EC4\n            // \u7A7A  +  \u6570\u7EC4\n            if(prevFlag & ShapeFlags.ARRAY_CHILDREN){\n                if(shapeFlag & ShapeFlags.ARRAY_CHILDREN){\n                    debugger\n                    // diff \u7B97\u6CD5\n                    patchKeydChildren(oldChildren, newChildren, el)\n                }else{\n                    // \u4E4B\u524D\u662F\u6570\u7EC4\uFF0C \u73B0\u5728\u4E0D\u662F\u6570\u7EC4 (\u73B0\u5728\u7684\u53EF\u80FD\u6027: \u7A7A)\n                    unmountChildren(oldChildren)\n                    // hostSetElementText(el, newChildren)\n                }\n            }else{\n                // \u6570\u7EC4 + \u6587\u672C\n                // \u7A7A   + \u6587\u672C\n                // \u6570\u7EC4  + \u7A7A\n                if(prevFlag & ShapeFlags.TEXT_CHILDREN){\n                    hostSetElementText(el, '') // \u6E05\u7A7A\u6587\u672C\n                }\n                // \u6302\u8F7D \u65B0\u7684\u6570\u7EC4\n                if(shapeFlag & ShapeFlags.ARRAY_CHILDREN){\n                    mountChildren(newVnode, el)\n                }\n            }\n        }\n\n    }\n    // \u5148\u590D\u7528\u8282\u70B9\uFF0C \u5728\u6BD4\u8F83\u5C5E\u6027\uFF0C \u5728\u6BD4\u8F83 children\n    const patchElement = (oldValue, newVnode, container) => {\n        debugger\n        let el = newVnode.el = oldValue.el\n        let oldProps = oldValue.props\n        let newProps = newVnode.props\n\n        // \u5BF9\u6BD4\u5C5E\u6027\uFF0C \u590D\u7528 vnode\u7684 el \u5C5E\u6027\n        patchProps(oldProps, newProps, el)\n\n        // \u5BF9\u6BD4 children\n        patchChildren(oldValue, newVnode, el)\n    }\n\n    const processText = (oldValue, newVnode, container) => {\n        if(oldValue == null){\n            newVnode.el = hostCreateText(newVnode.children)\n            hostInsert(newVnode.el, container)\n        }else{\n            // \u6587\u672C\u5185\u5BB9\u53D8\u4E86\uFF0C \u590D\u7528\u8001\u7684 vnode.el\n            const el = newVnode.el = oldValue.el\n            if(newVnode.children !== oldValue.children){\n                hostSetText(el, newVnode.children) // \u6587\u672C\u66F4\u65B0\n            }\n        }\n    }\n    const processElement = (oldValue, newVnode, container, anchor) => {\n        if(oldValue == null){\n            mountElement(newVnode, container, anchor)\n        }else{\n            // \u5143\u7D20\u5BF9\u6BD4\n            patchElement(oldValue, newVnode, container)\n        }\n    }\n\n    // \u65E0\u8BBA\u662F\u66F4\u65B0 \u8FD8\u662F \u521B\u5EFA  \u90FD\u8D70 patch\n    // \u5728 patch \u91CC\u9762\u8C03\u7528 processElement or processText\uFF0C \u5728\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u91CC\u9762\u533A\u5206\u66F4\u65B0\u548C\u521B\u5EFA\n    const patch = (oldValue, newVnode, container, anchor = null) => {\n        // console.log(oldValue, newVnode)\n        if(oldValue === newVnode) return\n\n        // \u5224\u65AD\u8001\u5143\u7D20\u548C\u65B0\u5143\u7D20 \u662F\u4E0D\u662F\u76F8\u540C\u7684\uFF0C\u4E4B\u540E\u628A \u8001\u5143\u7D20 \u7F6E\u4E3A\u7A7A\uFF0C \u8C03\u7528\u540E\u7EED\u7684\u65B9\u6CD5(\u76F8\u5F53\u4E8E\u65B0\u521B\u5EFA)\n        if(oldValue && !isSameVnode(oldValue, newVnode)){\n            // \u5220\u9664\u7684\u903B\u8F91\n            unmount(oldValue)\n            oldValue = null\n        }\n\n\n        // \u521D\u6B21\u6E32\u67D3\u548C\u66F4\u65B0\u6D41\u7A0B \u7EDF\u4E00\u653E\u5230 processElement \u5904\u7406\n\n        // if(oldValue == null){\n            // \u521D\u6B21\u6E32\u67D3\n            // \u521D\u6B21\u6E32\u67D3\u4E5F\u9700\u8981\u533A\u5206 \u6587\u672C\u7C7B\u578B \u548C \u975E \u6587\u672C\u7C7B\u578B\n\n            // \u76F4\u63A5\u6E32\u67D3\u7684\u6587\u672C\u8282\u70B9\n            // render(h(TEXT, '444'), container)\n            const {type, shapeFlag} = newVnode\n            switch(type){\n                case TEXT:\n                    processText(oldValue, newVnode, container)\n                    break;\n                default:\n                    // \u5143\u7D20\u8282\u70B9\u8D70\u6B64 \u521B\u5EFA\u65B9\u6CD5\n                    // 17 & 1   1\n                    //  9 & 1   1\n                    if(shapeFlag & ShapeFlags.ELEMENT){\n                        processElement(oldValue, newVnode, container, anchor)\n                    }\n            }\n        // }else{\n        //     // \u66F4\u65B0\u6D41\u7A0B\n        // }\n    }\n\n    const unmount = (vnode) => {\n        hostRemove(vnode.el)\n    }   \n\n    const render = (vnode, container) => {\n        console.log(vnode, container, '11')\n\n        if(vnode == null){\n            // \u5378\u8F7D\u903B\u8F91, \u6E32\u67D3\u8FC7\u4E86\uFF0C\u624D\u4F1A\u5378\u8F7D\n            if(container._vnode){\n                // \u6CA1\u6709\u76F4\u63A5\u4F20\u5165 container._vnode.el\uFF0C \u56E0\u4E3A\u4F20\u5165\u7684\u53EF\u80FD\u662F \u7EC4\u4EF6 \u53EF\u80FD\u662F\u6587\u672C\uFF0C\u4E0D\u76F4\u63A5\u4F7F\u7528 el\n                unmount(container._vnode)\n            }\n        }else{\n            // \u65E2\u6709\u521D\u59CB\u5316\uFF0C\u4E5F\u6709\u66F4\u65B0\u7684\u903B\u8F91\n            patch(container._vnode || null, vnode, container)\n        }\n        // \u521D\u59CB\u5316\u7684\u65F6\u5019\uFF0Cpatch \u4F20\u5165\u7684\u662Fnull\uFF0C\u6267\u884C\u5B8C\u6210\u4E4B\u540E\uFF0C\u5728 container \u4E0A\u6302\u8F7D _vnode\n        // \u7B2C\u4E8C\u6B21\u6E32\u67D3\u7684\u65F6\u5019\uFF0C\u4F20\u5165\u4E0A\u6B21\u7684 vnode(container._vnode) \u548C \u8FD9\u6B21\u7684 vnode \u8FDB\u884C\u5BF9\u6BD4\uFF0C\u540C\u65F6\u66F4\u65B0 container._vnode \u4E3A\u540E\u7EED\u6E32\u67D3\u670D\u52A1\n        container._vnode = vnode\n    }\n    return {\n        render\n    }\n}", "import { isArray, isObject } from '@vue/shared'\nimport { createVnode, isVnode } from './vnode'\n\n// \u6700\u7EC8 h \u521B\u5EFA\u51FA\u6765\u7684 children \u5C31\u4E24\u79CD\u60C5\u51B5\uFF0C \u4E00\u79CD\u662F \u6587\u672C\uFF0C \u4E00\u79CD\u662F \u6570\u7EC4\nexport const h = function(type, propsOrChinlren, children){\n    const l = arguments.length\n\n    // h('div', { style: { color: 'red' } })\n    // h('div', h('span'))\n    // h('div', [h('span'), h('span')])\n    // h('div', 'xxx') // \u6587\u672C\u4E0D\u9700\u8981\u5305\u88C5\n    if(l === 2){\n        if(isObject(propsOrChinlren) && !isArray(propsOrChinlren)){\n            if(isVnode(propsOrChinlren)){\n                return createVnode(type, null, [propsOrChinlren])\n            }\n            return createVnode(type, propsOrChinlren)\n        }else{\n            return createVnode(type, null, propsOrChinlren)\n        }\n    }else{\n        // debugger\n        let child = [];\n        if(l > 3){\n            child = Array.from(arguments).slice(2)\n        }else if(l === 3 && isVnode(children)){\n            // \u7B49\u4E8E3\u4E2A\u7684\u60C5\u51B5\n            child = [children]\n        }else{\n            // \u6587\u672C\u8282\u70B9\n            child = children\n        }\n        // \u5176\u4ED6\u60C5\u51B5\n\n        return createVnode(type, propsOrChinlren, child)\n    }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAO,MAAM,WAAW,CAAC,UAAU;AAC/B,WAAO,OAAO,UAAU,YAAY,UAAU;AAAA,EAClD;AAEO,MAAM,WAAW,CAAC,UAAU;AAC/B,WAAO,OAAO,UAAU;AAAA,EAC5B;AAUO,MAAM,UAAU,MAAM;;;ACftB,MAAM,OAAO,OAAO,MAAM;AAG1B,MAAM,cAAc,CAAC,UAAU,aAAa;AAC/C,WAAO,SAAS,QAAQ,SAAS,OAAO,SAAS,SAAS,SAAS;AAAA,EACvE;AAKO,MAAM,cAAc,CAAC,MAAM,OAAO,WAAW,SAAS;AACzD;AAEA,QAAI,YAAY,SAAS,IAAI,IAAI,kBAAqB;AAMtD,UAAM,QAAQ;AAAA,MACV,YAAY;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,KAAK,+BAAO;AAAA,MACZ,IAAI;AAAA,IACR;AAQA,QAAG,UAAS;AACR,UAAI,QAAO;AACX,UAAG,QAAQ,QAAQ,GAAE;AACjB,gBAAO;AAAA,MACX,OAAK;AACD,mBAAW,OAAO,QAAQ;AAC1B,gBAAO;AAAA,MACX;AAEA,YAAM,YAAY,MAAM,YAAY;AAAA,IAExC;AACA,WAAO;AAAA,EACX;AAGO,MAAM,UAAU,CAAC,UAAU;AAC9B,WAAO,CAAC,CAAE,UAAS,MAAM;AAAA,EAC7B;;;ACnDO,MAAM,iBAAiB,CAAC,kBAAkB;AAE7C,UAAM;AAAA,MACF,QAAQ;AAAA,MAER,QAAQ;AAAA,MAGR,gBAAgB;AAAA,MAChB,SAAS;AAAA,MACT,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,YAAY;AAAA,QACZ;AAGJ,UAAM,YAAY,CAAC,UAAU,QAAQ;AACjC,UAAG,SAAS,SAAS,IAAI,GAAE;AACvB,YAAI,QAAQ,YAAY,MAAM,MAAM,SAAS,IAAI;AACjD,iBAAS,OAAO;AAAA,MACpB;AACA,aAAO,SAAS;AAAA,IACpB;AAEA,UAAM,gBAAgB,CAAC,UAAU,cAAc;AAC3C,eAAS,QAAQ,GAAG,QAAQ,SAAS,QAAQ,SAAS;AAElD,YAAI,QAAQ,UAAU,UAAU,KAAK;AACrC,cAAM,MAAM,OAAO,SAAS;AAAA,MAChC;AAAA,IACJ;AAMA,UAAM,eAAe,CAAC,OAAO,WAAW,WAAW;AAC/C,cAAQ,IAAI,OAAO,OAAO;AAG1B,UAAI,EAAE,MAAM,OAAO,UAAU,cAAa;AAG1C,UAAI,KAAK,MAAM,KAAK,kBAAkB,IAAI;AAE1C,UAAG,OAAM;AACL,mBAAW,OAAO,OAAO;AACrB,yBAAe,IAAI,KAAK,MAAM,MAAM,IAAI;AAAA,QAC5C;AAAA,MACJ;AAQA,UAAG,wBAA2B,WAAU;AACpC,2BAAmB,IAAI,QAAQ;AAAA,MACnC,WAAS,0BAA4B,WAAU;AAC3C,sBAAc,UAAU,EAAE;AAAA,MAC9B;AAEA,iBAAW,IAAI,WAAW,MAAM;AAAA,IACpC;AAEA,UAAM,aAAa,CAAC,UAAU,UAAU,OAAO;AAC3C,iBAAW,OAAO,UAAU;AACxB,uBAAe,IAAI,KAAK,SAAS,MAAM,SAAS,IAAI;AAAA,MACxD;AAEA,iBAAW,OAAO,UAAU;AACxB,YAAG,CAAC,SAAS,MAAK;AACd,yBAAe,IAAI,KAAK,SAAS,MAAM,MAAS;AAAA,QACpD;AAAA,MACJ;AAAA,IACJ;AACA,UAAM,kBAAkB,CAAC,gBAAgB;AACrC,eAAS,QAAQ,GAAG,QAAQ,YAAY,QAAQ,SAAS;AACrD,cAAM,eAAe,YAAY;AACjC,gBAAQ,YAAY;AAAA,MACxB;AAAA,IACJ;AAIA,UAAM,oBAAoB,CAAC,aAAa,aAAa,OAAO;AACxD,UAAI,IAAI;AACR,UAAI,oBAAoB,YAAY,SAAS;AAC7C,UAAI,oBAAoB,YAAY,SAAS;AAU7C,aAAM,KAAK,qBAAqB,KAAK,mBAAkB;AACnD,cAAM,kBAAkB,YAAY;AACpC,cAAM,kBAAkB,YAAY;AAEpC,YAAG,YAAY,iBAAiB,eAAe,GAAE;AAC7C,gBAAM,iBAAiB,iBAAiB,EAAE;AAAA,QAC9C,OAAK;AACD;AAAA,QACJ;AACA;AAAA,MACJ;AAQA,aAAM,KAAK,qBAAqB,KAAK,mBAAkB;AACnD,cAAM,kBAAkB,YAAY;AACpC,cAAM,kBAAkB,YAAY;AAEpC,YAAG,YAAY,iBAAiB,eAAe,GAAE;AAC7C,gBAAM,iBAAiB,iBAAiB,EAAE;AAAA,QAC9C,OAAK;AACD;AAAA,QACJ;AACA;AACA;AAAA,MACJ;AACA,cAAQ,IAAI,GAAG,mBAAmB,iBAAiB;AASnD,UAAG,IAAI,mBAAkB;AACrB,YAAG,KAAK,mBAAkB;AACtB,iBAAM,KAAK,mBAAkB;AACzB,kBAAM,UAAU,oBAAoB;AACpC,kBAAM,SAAS,UAAU,YAAY,SAAS,YAAY,SAAS,KAAK;AAExE,kBAAM,MAAM,YAAY,IAAI,IAAI,MAAM;AACtC;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ,WAAS,IAAI,mBAAkB;AAO3B,YAAG,KAAK,mBAAkB;AACtB,iBAAM,KAAK,mBAAkB;AACzB,oBAAQ,YAAY,EAAE;AACtB;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,KAAK;AACT,UAAI,KAAK;AACT,YAAM,mBAAmB,oBAAI,IAAI;AAIjC,eAAS,QAAQ,IAAI,SAAS,mBAAmB,SAAS;AACtD,yBAAiB,IAAI,YAAY,OAAO,KAAK,KAAK;AAAA,MACtD;AAGA,cAAQ,IAAI,kBAAkB,kBAAkB;AAGhD,YAAM,cAAc,oBAAoB,KAAK;AAC7C,YAAM,wBAAwB,IAAI,MAAM,WAAW,EAAE,KAAK,CAAC;AAG3D,eAAS,QAAQ,IAAI,SAAS,mBAAmB,SAAS;AACtD,cAAM,aAAa,YAAY;AAC/B,YAAI,SAAS,iBAAiB,IAAI,WAAW,GAAG;AAEhD,YAAG,CAAC,CAAC,QAAO;AACR,kBAAQ,UAAU;AAAA,QACtB,OAAK;AAGD,gCAAsB,SAAS,MAAM,QAAQ;AAE7C,gBAAM,YAAY,YAAY,SAAS,EAAE;AAAA,QAC7C;AAAA,MACJ;AACA,cAAQ,IAAI,qBAAqB;AAIjC,eAAS,QAAQ,cAAc,GAAG,SAAS,GAAG,SAAS;AACnD,cAAM,MAAM,KAAK,cAAc;AAC/B,YAAI,UAAU,YAAY;AAE1B,YAAI,SAAS,MAAM,IAAI,YAAY,SAAS,YAAY,MAAM,GAAG,KAAK;AAItE,YAAG,sBAAsB,WAAW,GAAE;AAClC,gBAAM,MAAM,SAAS,IAAI,MAAM;AAAA,QACnC,OAAK;AAGD,qBAAW,QAAQ,IAAI,IAAI,MAAM;AAAA,QACrC;AAAA,MACJ;AAAA,IACJ;AAEA,UAAM,gBAAgB,CAAC,UAAU,UAAU,OAAO;AAC9C,YAAM,cAAc,YAAY,SAAS;AACzC,YAAM,cAAc,YAAY,SAAS;AAEzC,YAAM,WAAW,SAAS;AAC1B,YAAM,YAAY,SAAS;AAiB3B,UAAG,YAAY,uBAAyB;AAEpC,YAAG,WAAW,yBAA0B;AACpC,0BAAgB,WAAW;AAAA,QAC/B;AAGA,YAAG,gBAAgB,aAAY;AAC3B,6BAAmB,IAAI,WAAW;AAAA,QACtC;AAAA,MACJ,OAAK;AAMD,YAAG,WAAW,yBAA0B;AACpC,cAAG,YAAY,yBAA0B;AACrC;AAEA,8BAAkB,aAAa,aAAa,EAAE;AAAA,UAClD,OAAK;AAED,4BAAgB,WAAW;AAAA,UAE/B;AAAA,QACJ,OAAK;AAID,cAAG,WAAW,uBAAyB;AACnC,+BAAmB,IAAI,EAAE;AAAA,UAC7B;AAEA,cAAG,YAAY,yBAA0B;AACrC,0BAAc,UAAU,EAAE;AAAA,UAC9B;AAAA,QACJ;AAAA,MACJ;AAAA,IAEJ;AAEA,UAAM,eAAe,CAAC,UAAU,UAAU,cAAc;AACpD;AACA,UAAI,KAAK,SAAS,KAAK,SAAS;AAChC,UAAI,WAAW,SAAS;AACxB,UAAI,WAAW,SAAS;AAGxB,iBAAW,UAAU,UAAU,EAAE;AAGjC,oBAAc,UAAU,UAAU,EAAE;AAAA,IACxC;AAEA,UAAM,cAAc,CAAC,UAAU,UAAU,cAAc;AACnD,UAAG,YAAY,MAAK;AAChB,iBAAS,KAAK,eAAe,SAAS,QAAQ;AAC9C,mBAAW,SAAS,IAAI,SAAS;AAAA,MACrC,OAAK;AAED,cAAM,KAAK,SAAS,KAAK,SAAS;AAClC,YAAG,SAAS,aAAa,SAAS,UAAS;AACvC,sBAAY,IAAI,SAAS,QAAQ;AAAA,QACrC;AAAA,MACJ;AAAA,IACJ;AACA,UAAM,iBAAiB,CAAC,UAAU,UAAU,WAAW,WAAW;AAC9D,UAAG,YAAY,MAAK;AAChB,qBAAa,UAAU,WAAW,MAAM;AAAA,MAC5C,OAAK;AAED,qBAAa,UAAU,UAAU,SAAS;AAAA,MAC9C;AAAA,IACJ;AAIA,UAAM,QAAQ,CAAC,UAAU,UAAU,WAAW,SAAS,SAAS;AAE5D,UAAG,aAAa;AAAU;AAG1B,UAAG,YAAY,CAAC,YAAY,UAAU,QAAQ,GAAE;AAE5C,gBAAQ,QAAQ;AAChB,mBAAW;AAAA,MACf;AAWI,YAAM,EAAC,MAAM,cAAa;AAC1B,cAAO;AAAA,aACE;AACD,sBAAY,UAAU,UAAU,SAAS;AACzC;AAAA;AAKA,cAAG,YAAY,iBAAmB;AAC9B,2BAAe,UAAU,UAAU,WAAW,MAAM;AAAA,UACxD;AAAA;AAAA,IAKhB;AAEA,UAAM,UAAU,CAAC,UAAU;AACvB,iBAAW,MAAM,EAAE;AAAA,IACvB;AAEA,UAAM,SAAS,CAAC,OAAO,cAAc;AACjC,cAAQ,IAAI,OAAO,WAAW,IAAI;AAElC,UAAG,SAAS,MAAK;AAEb,YAAG,UAAU,QAAO;AAEhB,kBAAQ,UAAU,MAAM;AAAA,QAC5B;AAAA,MACJ,OAAK;AAED,cAAM,UAAU,UAAU,MAAM,OAAO,SAAS;AAAA,MACpD;AAGA,gBAAU,SAAS;AAAA,IACvB;AACA,WAAO;AAAA,MACH;AAAA,IACJ;AAAA,EACJ;;;AC7XO,MAAM,IAAI,SAAS,MAAM,iBAAiB,UAAS;AACtD,UAAM,IAAI,UAAU;AAMpB,QAAG,MAAM,GAAE;AACP,UAAG,SAAS,eAAe,KAAK,CAAC,QAAQ,eAAe,GAAE;AACtD,YAAG,QAAQ,eAAe,GAAE;AACxB,iBAAO,YAAY,MAAM,MAAM,CAAC,eAAe,CAAC;AAAA,QACpD;AACA,eAAO,YAAY,MAAM,eAAe;AAAA,MAC5C,OAAK;AACD,eAAO,YAAY,MAAM,MAAM,eAAe;AAAA,MAClD;AAAA,IACJ,OAAK;AAED,UAAI,QAAQ,CAAC;AACb,UAAG,IAAI,GAAE;AACL,gBAAQ,MAAM,KAAK,SAAS,EAAE,MAAM,CAAC;AAAA,MACzC,WAAS,MAAM,KAAK,QAAQ,QAAQ,GAAE;AAElC,gBAAQ,CAAC,QAAQ;AAAA,MACrB,OAAK;AAED,gBAAQ;AAAA,MACZ;AAGA,aAAO,YAAY,MAAM,iBAAiB,KAAK;AAAA,IACnD;AAAA,EACJ;",
  "names": []
}
