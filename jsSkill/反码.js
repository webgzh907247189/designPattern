console.log(~2.3)  // -3
console.log(~2.6)  // -3

// 推倒公式你就能明白了
// ~x = -(x + 1)



// 取反
function reveNumber(val){
    return ~val + 1
}
console.log(reveNumber(2)) // -2


// 对正数来说 ~~ 运算结果与 Math.floor( ) 运算结果相同，而对于负数来说不相同
console.log(~~2.3)  // 2
console.log(~~2.6)  // 2
console.log(~~-2.6)  // -2
console.log(~~-2.4)  // -2




// 隐藏类
// https://juejin.cn/post/6972702293636415519
// ECMAScript 规范中定义了数字属性应该按照索引值大小升序排列，字符串属性根据创建时的顺序升序排列。



// V8 在运行 JavaScript 的过程中，会假设 JavaScript 中的对象是静态的，具体地讲，V8 对每个对象做如下两点假设：
// 对象创建好了之后就不会添加新的属性；
// 对象创建好了之后也不会删除属性。


// 具体地讲，V8 会为每个对象创建一个隐藏类，对象的隐藏类中记录了该对象一些基础的布局信息，包括以下两点：
// 对象中所包含的所有的属性；
// 每个属性相对于对象的偏移量。


// 有了隐藏类之后，那么当 V8 访问某个对象中的某个属性时，就会先去隐藏类中查找该属性相对于它的对象的偏移量，
// 有了偏移量和属性类型，V8 就可以直接去内存中取出对于的属性值，而不需要经历一系列的查找过程，那么这就大大提升了 V8 查找对象的效率


// 尽量避免使用 delete 方法。delete 方法会破坏对象的形状，同样会导致 V8 为该对象重新生成新的隐藏类。
