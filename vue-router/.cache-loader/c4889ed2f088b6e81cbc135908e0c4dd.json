{"remainingRequest":"/Users/web/Documents/workspace/gzh/gzhLearn/designPattern/vue-router/node_modules/babel-loader/lib/index.js!/Users/web/Documents/workspace/gzh/gzhLearn/designPattern/vue-router/src/router/vue-router.js","dependencies":[{"path":"/Users/web/Documents/workspace/gzh/gzhLearn/designPattern/vue-router/src/router/vue-router.js","mtime":1566899008011},{"path":"/Users/web/Documents/workspace/gzh/gzhLearn/designPattern/vue-router/.babelrc","mtime":1560786629885},{"path":"/Users/web/Documents/workspace/gzh/gzhLearn/designPattern/vue-router/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/web/Documents/workspace/gzh/gzhLearn/designPattern/vue-router/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\n\n/**\n * history.length 最大为50 有大小限制\n */\nvar HistoryRoute = function HistoryRoute() {\n  _classCallCheck(this, HistoryRoute);\n\n  this.current = null;\n};\n\nvar VueRouter =\n/*#__PURE__*/\nfunction () {\n  function VueRouter(options) {\n    _classCallCheck(this, VueRouter);\n\n    this.options = options;\n    this.mode = options.mode || 'hash';\n    this.routes = options.routes || []; // 收敛数组\n\n    this.routesMaps = this.createMap(this.routes);\n    this.history = new HistoryRoute();\n    this.init();\n  }\n\n  _createClass(VueRouter, [{\n    key: \"createMap\",\n    value: function createMap(list) {\n      return list.reduce(function (result, item) {\n        result[item.path] = item.component;\n        return result;\n      }, Object.create(null));\n    }\n  }, {\n    key: \"hashLoad\",\n    value: function hashLoad() {\n      var _this = this;\n\n      window.addEventListener('load', function () {\n        // console.log('zzz')\n        _this.history.current = location.hash.slice(1);\n      });\n    }\n  }, {\n    key: \"hashChange\",\n    value: function hashChange() {\n      var _this2 = this;\n\n      window.addEventListener('hashchange', function () {\n        _this2.history.current = location.hash.slice(1);\n      });\n    }\n  }, {\n    key: \"pathLoad\",\n    value: function pathLoad() {\n      var _this3 = this;\n\n      window.addEventListener('load', function () {\n        _this3.history.current = location.pathname;\n      });\n    }\n  }, {\n    key: \"go\",\n    value: function go() {\n      var _this4 = this;\n\n      // 只有前进后退才能触发popstate，pushState不会触发popstate\n      window.addEventListener('popstate', function () {\n        _this4.history.current = location.pathname;\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      if (this.mode == 'hash') {\n        //判断用户打开时有没有hash，没有跳到/#/\n        location.hash ? '' : location.hash = '#/';\n        this.hashLoad();\n        this.hashChange();\n      } else {\n        location.pathname ? '' : location.pathname = '/';\n        this.pathLoad();\n        this.go();\n      }\n    }\n  }]);\n\n  return VueRouter;\n}(); // 使用vue.use()  会调用install 方法\n\n\nVueRouter.install = function (Vue) {\n  // 每个组件都有 this.$router 和 this.$route\n  Vue.mixin({\n    beforeCreate: function beforeCreate() {\n      // vue组件渲染顺序 ->  先序深度遍历 渲染\n      if (this.$options && this.$options.router) {\n        //根组件\n        this._root = this;\n        this._router = this.$options && this.$options.router; // console.log(this._router.history,'this.$router')\n        // 深度监控 (服务于  router-view的current)\n\n        Vue.util.defineReactive(this, 'xx', this._router.history);\n      } else {\n        // 深度先续遍历\n        this._root = this.$parent && this.$parent._root;\n      }\n\n      Object.defineProperty(this, '$router', {\n        get: function get() {\n          // 唯一的路由实列 得到 VueRouter 的实列(所以 this.$router 有go方法)\n          return this._root._router;\n        }\n      });\n      Object.defineProperty(this, '$route', {\n        get: function get() {\n          // this._root._router.history 是 HistoryRoute 的实列\n          return {\n            current: this._root._router.history.current\n          };\n        }\n      });\n    }\n  });\n  Vue.component('router-link', {\n    props: {\n      to: String,\n      tag: {\n        \"default\": 'a',\n        type: String\n      }\n    },\n    methods: {\n      handleClick: function handleClick() {// href={mode === 'hash' ? `#${this.to}`: this.to}\n      }\n    },\n    render: function render(h) {\n      var mode = this._self._root._router.mode;\n      var Tag = this.tag;\n      return h(Tag, {\n        on: {\n          \"click\": this.handleClick\n        },\n        attrs: {\n          href: mode === 'hash' ? \"#\".concat(this.to) : this.to\n        }\n      }, [this.$slots[\"default\"]]);\n    }\n  });\n  Vue.component('router-view', {\n    // this._self 当前的组件\n    // render 方法 里面的 this_self 指向 组件\n    // this._self._root 指向 根组件\n    // this._self._root._router 指向 根组件的 HistoryRoute 实例\n    render: function render(h) {\n      var current = this._self._root._router.history.current;\n      var routersMap = this._self._root._router.routesMaps;\n      console.log(current, 'current');\n      return h(routersMap[current]);\n    }\n  });\n};\n\nexport default VueRouter;",{"version":3,"sources":["/Users/web/Documents/workspace/gzh/gzhLearn/designPattern/vue-router/src/router/vue-router.js"],"names":["HistoryRoute","current","VueRouter","options","mode","routes","routesMaps","createMap","history","init","list","reduce","result","item","path","component","Object","create","window","addEventListener","location","hash","slice","pathname","hashLoad","hashChange","pathLoad","go","install","Vue","mixin","beforeCreate","$options","router","_root","_router","util","defineReactive","$parent","defineProperty","get","props","to","String","tag","type","methods","handleClick","render","h","_self","Tag","$slots","routersMap","console","log"],"mappings":"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","sourcesContent":["/**\n * history.length 最大为50 有大小限制\n */\nclass HistoryRoute{\n    constructor(){\n        this.current = null\n    }\n}\n\nclass VueRouter{\n    constructor(options){\n        this.options = options\n        this.mode = options.mode || 'hash'\n        this.routes = options.routes || []\n\n        // 收敛数组\n        this.routesMaps = this.createMap(this.routes)\n\n        this.history = new HistoryRoute()\n        this.init()\n    }\n\n    createMap(list){\n        return list.reduce((result,item)=>{\n            result[item.path] = item.component\n            return result\n        },Object.create(null))\n    }\n\n    hashLoad(){\n        window.addEventListener('load',()=>{\n            // console.log('zzz')\n            this.history.current = location.hash.slice(1)\n        })\n    }\n\n    hashChange(){\n        window.addEventListener('hashchange',()=>{\n            this.history.current = location.hash.slice(1)\n        })\n    }\n\n    pathLoad(){\n        window.addEventListener('load',()=>{\n            this.history.current = location.pathname\n        })\n    }\n    go(){\n        // 只有前进后退才能触发popstate，pushState不会触发popstate\n        window.addEventListener('popstate',()=>{\n            this.history.current = location.pathname\n        })\n    }\n\n    init(){\n        if(this.mode == 'hash'){\n            //判断用户打开时有没有hash，没有跳到/#/\n            location.hash ? '' : location.hash = '#/'\n            this.hashLoad()\n            this.hashChange()\n        }else{\n            location.pathname ? '' : location.pathname = '/'\n            this.pathLoad()\n            this.go()\n        }\n    }\n}\n\n // 使用vue.use()  会调用install 方法\n VueRouter.install = function(Vue){\n    // 每个组件都有 this.$router 和 this.$route\n    Vue.mixin({\n        beforeCreate(){\n\n            // vue组件渲染顺序 ->  先序深度遍历 渲染\n            if(this.$options && this.$options.router){ //根组件\n                this._root = this\n                this._router = this.$options && this.$options.router\n\n                // console.log(this._router.history,'this.$router')\n                // 深度监控 (服务于  router-view的current)\n                Vue.util.defineReactive(this,'xx',this._router.history)\n            }else{\n                // 深度先续遍历\n                this._root = this.$parent && this.$parent._root\n            }\n\n            Object.defineProperty(this,'$router',{\n                get(){\n                    // 唯一的路由实列 得到 VueRouter 的实列(所以 this.$router 有go方法)\n                    return this._root._router\n                }\n            })\n\n            Object.defineProperty(this,'$route',{\n                get(){\n                    // this._root._router.history 是 HistoryRoute 的实列\n                    return {\n                        current: this._root._router.history.current\n                    }\n                }\n            })\n        }\n    })\n\n    Vue.component('router-link',{\n        props: {\n            to: String,\n            tag: {\n                default: 'a',\n                type: String\n            }\n        },\n        methods: {\n            handleClick(){\n                // href={mode === 'hash' ? `#${this.to}`: this.to}\n            }\n        },\n        render(h){\n            let mode = this._self._root._router.mode\n            let Tag = this.tag\n            return (<Tag on-click={this.handleClick}  href={mode === 'hash' ? `#${this.to}`: this.to}>{this.$slots.default}</Tag>)\n        }\n    })\n\n    Vue.component('router-view',{\n        // this._self 当前的组件\n        // render 方法 里面的 this_self 指向 组件\n        // this._self._root 指向 根组件\n        // this._self._root._router 指向 根组件的 HistoryRoute 实例\n        render(h){\n            let current = this._self._root._router.history.current\n\n            let routersMap = this._self._root._router.routesMaps\n            console.log(current,'current')\n            return h(routersMap[current])\n        }\n    })\n }\n\n export default VueRouter"]}]}